# Generated by Django 3.1.2 on 2020-10-23 09:13

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('appreciation', models.BooleanField()),
                ('appreciation_count', models.IntegerField(blank=True, null=True)),
                ('commentabled', models.BooleanField()),
                ('content', models.TextField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('first_picture', models.CharField(blank=True, max_length=255, null=True)),
                ('flag', models.CharField(blank=True, max_length=255, null=True)),
                ('published', models.BooleanField()),
                ('recommend', models.BooleanField()),
                ('share_statement', models.BooleanField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('views', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_blog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlogTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 't_blog_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clipboard',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('delete_switch', models.BooleanField()),
                ('delete_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_clipboard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('admin_comment', models.BooleanField()),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 't_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 't_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 't_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 't_user',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='AuthGroup',
        ),
        migrations.DeleteModel(
            name='AuthGroupPermissions',
        ),
        migrations.DeleteModel(
            name='AuthPermission',
        ),
        migrations.DeleteModel(
            name='AuthUser',
        ),
        migrations.DeleteModel(
            name='AuthUserGroups',
        ),
        migrations.DeleteModel(
            name='AuthUserUserPermissions',
        ),
        migrations.DeleteModel(
            name='ClipboardSequence',
        ),
        migrations.DeleteModel(
            name='DjangoAdminLog',
        ),
        migrations.DeleteModel(
            name='DjangoContentType',
        ),
        migrations.DeleteModel(
            name='DjangoMigrations',
        ),
        migrations.DeleteModel(
            name='DjangoSession',
        ),
        migrations.DeleteModel(
            name='HibernateSequence',
        ),
        migrations.DeleteModel(
            name='TBlog',
        ),
        migrations.DeleteModel(
            name='TBlogTags',
        ),
        migrations.DeleteModel(
            name='TClipboard',
        ),
        migrations.DeleteModel(
            name='TComment',
        ),
        migrations.DeleteModel(
            name='TTag',
        ),
        migrations.DeleteModel(
            name='TType',
        ),
        migrations.DeleteModel(
            name='TUser',
        ),
    ]
